#removing first row which is new years
early_covid <- early_covid[-1,]
#transforming each column to a percentage change from initial value
for (i in c(2:9)){
inital_val <- unlist(early_covid[1,i[[1]]])
early_covid[,i] <- (early_covid[ ,i]/inital_val)- 1
}
early_covid %>%
pivot_longer(cols  = c(5,6,4), names_to = 'market' , values_to = 'pct_change') %>%
ggplot() +
geom_line(aes(x = dates, y=pct_change, color = market) , size = 1.5 , alpha = 0.5) +
geom_hline(yintercept = 0 , size = 2 ) +
scale_y_continuous(labels =  scales::percent) +
theme_minimal() +
theme(panel.grid.major.x =  element_blank() ,
panel.grid.minor =  element_blank() ,
panel.grid.major.y = element_line(size = 1),
legend.position = 'bottom') +
labs(y = '' , x = '' )
### USA , ftse , germany during covid
#limit data to 2020 jan, feb march
early_covid <- originalData_process %>%
filter(year(dates) == 2020 , month(dates) %in% c(1,2,3))
#removing first row which is new years
early_covid <- early_covid[-1,]
#transforming each column to a percentage change from initial value
for (i in c(2:9)){
inital_val <- unlist(early_covid[1,i[[1]]])
early_covid[,i] <- (early_covid[ ,i]/inital_val)- 1
}
early_covid %>%
pivot_longer(cols  = c(5,6,4), names_to = 'market' , values_to = 'pct_change') %>%
ggplot() +
geom_line(aes(x = dates, y=pct_change, color = market) , size = 1.5 , alpha = 0.5) +
geom_hline(yintercept = 0 , size = 2 ) +
scale_y_continuous(labels =  scales::percent) +
theme_minimal() +
theme(panel.grid.major.x =  element_blank() ,
panel.grid.minor =  element_blank() ,
panel.grid.major.y = element_line(size = 1),
legend.position = 'bottom') +
labs(y = '' , x = '' )
plot_df2 <- quarters %>%
filter(year == 2020) %>%
pivot_longer(cols = c(2:9),  names_to = 'market' , values_to = 'price' ) %>%
filter(is.na(price) == FALSE) %>%
group_by(market) %>%
mutate(per_change = (price/lag(price))  - 1) %>%
summarise(.groups = "keep" , first_val = first(price) , last_val = last(price) , std = sd(per_change , na.rm = TRUE)) %>%
mutate(perc_drop =(last_val/first_val ) - 1) %>%
select(market, perc_drop , std , last_val)
plot_df2 %>%
ggplot() +
geom_point(aes(x = perc_drop , y = std , size = last_val,  fill = market), shape = 21 , alpha = 0.5) +
theme_minimal() +
scale_size(range = c(6,25)) +
geom_label_repel(mapping = aes(x = perc_drop , y = std ,  label = market) ,
force = 20 , direction = "both" , face = 'bold' , )+
scale_x_continuous(labels = scales::percent) +
scale_y_continuous(labels = scales::percent) +
theme(panel.grid.minor =  element_blank() ,
panel.grid.major = element_blank(),
legend.position =  'bottom') +
guides(color=guide_legend("market"), fill = FALSE)
covid_1 <- read_csv('data/covid_jh.csv')
covid_1 <- read_csv('data/covid_jh.csv')
covid_1<- clean_names(covid_1)
covid <- covid_1[-1 ,c(318:319)] %>%
rename('iso_a3' = 'iso_3166_1_alpha_3_codes') %>%
group_by(iso_a3) %>%
summarise(total = sum(x11_30_20))
covid <- covid_1[-1 ,c(318:319)] %>%
rename('iso_a3' = 'iso_3166_1_alpha_3_codes') %>%
group_by(iso_a3) %>%
summarise(total = sum(x11_30_20))
#extracting only the iso_a3 and total
map_covid <- covid %>%
select(iso_a3 , total)
covid <- covid_1[-1 ,c(318:319)] %>%
rename('iso_a3' = 'iso_3166_1_alpha_3_codes') %>%
group_by(iso_a3) %>%
summarise(total = sum(x11_30_20))
#extracting only the iso_a3 and total
map_covid <- covid %>%
select(iso_a3 , total)
#getting geometrty and isocodes
earth <- ne_countries(scale = 50, returnclass = "sf") %>%
select(admin, geometry, iso_a3)
covid_1 <- read_csv('data/covid_jh.csv')
covid_1<- clean_names(covid_1)
covid <- covid_1[-1 ,c(318:319)] %>%
rename('iso_a3' = 'iso_3166_1_alpha_3_codes') %>%
group_by(iso_a3) %>%
summarise(total = sum(x11_30_20))
#extracting only the iso_a3 and total
map_covid <- covid %>%
select(iso_a3 , total)
#getting geometrty and isocodes
earth <- ne_countries(scale = 50, returnclass = "sf") %>%
select(admin, geometry, iso_a3)
map_covid <- left_join(map_covid , earth , by = 'iso_a3')
map_covid <- map_covid %>%
select(admin, total, geometry) %>%
sf::st_as_sf()
options(scipen = 999)
map_covid <- map_covid %>%
select(admin, total, geometry) %>%
sf::st_as_sf()
options(scipen = 999)
map_covid  %>%
ggplot() +
geom_sf(aes(fill = total), size = 0.1, color = "white") +
coord_sf(crs = "+proj=longlat") +
scale_fill_distiller( palette = "Spectral",
direction = -1,
labels = unit_format(unit = "M", scale = 1e-6),
guide = guide_colorbar(
title = "Number of cases",
title.hjust = 0.5,
direction = "horizontal",
nrow = 1,
keyheight = unit(3, units = "mm"),
keywidth = unit(3, units = "mm"),
title.position = "top"  ,
barheight =  1.25 , barwidth = 15)) +
theme_minimal() +
theme(legend.direction = "horizontal",
legend.position = "bottom" ,
panel.grid.major.y = element_blank() , panel.grid.minor.y = element_blank()) +
labs(title = "",
subtitle = "Covid Cases Worldwide ")
display(brewer.paletter)
display(brewer.palette)
map_covid  %>%
ggplot() +
geom_sf(aes(fill = log(total)), size = 0.1, color = "white") +
coord_sf(crs = "+proj=longlat") +
scale_fill_distiller( palette = "RdYlGn",
direction = -1,
guide = guide_colorbar(
title = "Number of cases[log]",
title.hjust = 0.5,
direction = "horizontal",
nrow = 1,
keyheight = unit(3, units = "mm"),
keywidth = unit(3, units = "mm"),
title.position = "top"  ,
barheight =  1.25 , barwidth = 15)) +
theme_minimal() +
theme(legend.direction = "horizontal",
legend.position = "bottom" ,
panel.grid.major.y = element_blank() , panel.grid.minor.y = element_blank()) +
labs(title = "",
subtitle = "Covid Cases Worldwide ")
map_covid  %>%
ggplot() +
geom_sf(aes(fill = total), size = 0.1, color = "white") +
coord_sf(crs = "+proj=longlat") +
scale_fill_distiller( palette = "Blues",
direction = -1,
labels = unit_format(unit = "M", scale = 1e-6),
guide = guide_colorbar(
title = "Number of cases",
title.hjust = 0.5,
direction = "horizontal",
nrow = 1,
keyheight = unit(3, units = "mm"),
keywidth = unit(3, units = "mm"),
title.position = "top"  ,
barheight =  1.25 , barwidth = 15)) +
theme_minimal() +
theme(legend.direction = "horizontal",
legend.position = "bottom" ,
panel.grid.major.y = element_blank() , panel.grid.minor.y = element_blank()) +
labs(title = "",
subtitle = "Covid Cases Worldwide ")
map_covid  %>%
ggplot() +
geom_sf(aes(fill = total), size = 0.1, color = "white") +
coord_sf(crs = "+proj=longlat") +
scale_fill_distiller( palette = "Blues",
direction = 1,
labels = unit_format(unit = "M", scale = 1e-6),
guide = guide_colorbar(
title = "Number of cases",
title.hjust = 0.5,
direction = "horizontal",
nrow = 1,
keyheight = unit(3, units = "mm"),
keywidth = unit(3, units = "mm"),
title.position = "top"  ,
barheight =  1.25 , barwidth = 15)) +
theme_minimal() +
theme(legend.direction = "horizontal",
legend.position = "bottom" ,
panel.grid.major.y = element_blank() , panel.grid.minor.y = element_blank()) +
labs(title = "",
subtitle = "Covid Cases Worldwide ")
pop_2020 <- pop %>%
select(c(1,17))
#getting geometrty and isocodes
iso_un <- ne_countries(scale = 50, returnclass = "sf") %>%
select(iso_a3  , un_a3 , iso_n3  ) %>%
mutate(un_a3 = as.integer(un_a3) , iso_n3 = as.integer(iso_n3))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(cluster)
library(Hmisc)
library(factoextra)
library(purrr)
library(gridExtra)
library(data.table)
library(reshape2)
library(ggplot2)
library(dplyr)
library(readxl)
library(kableExtra)
library(janitor)
library(ggrepel)
library(scales)
library(rnaturalearth)
library(countrycode)
library(sf)
library(hrbrthemes)
left_join(pop_2020, iso_un , by = c('country_code' = 'iso_n3'))
#extracting populatuion
library(wpp2019)
#get 2020 pop and country code
data(pop)
pop_2020 <- pop %>%
select(c(1,17))
#getting geometrty and isocodes
iso_un <- ne_countries(scale = 50, returnclass = "sf") %>%
select(iso_a3  , un_a3 , iso_n3  ) %>%
mutate(un_a3 = as.integer(un_a3) , iso_n3 = as.integer(iso_n3))
View(left_join(pop_2020, iso_un , by = c('country_code' = 'un_a3')))
left_join(pop_2020, iso_un , by = c('country_code' = 'iso_n3')) %>%
filter(is.na(iso_a3) == FALSE) %>%
left_join(pop_2020, iso_un , by = c('country_code' = 'iso_n3')) %>%
filter(is.na(iso_a3) == FALSE)
#extracting populatuion
library(wpp2019)
#get 2020 pop and country code
data(pop)
pop_2020 <- pop %>%
select(c(1,17))
#getting geometrty and isocodes
iso_un <- ne_countries(scale = 50, returnclass = "sf") %>%
select(iso_a3  , un_a3 , iso_n3  ) %>%
mutate(un_a3 = as.integer(un_a3) , iso_n3 = as.integer(iso_n3))
left_join(pop_2020, iso_un , by = c('country_code' = 'iso_n3')) %>%
filter(is.na(iso_a3) == FALSE) %>%
select(2020, iso_a3, geometry) %>%
map_covid
left_join(pop_2020, iso_un , by = c('country_code' = 'iso_n3')) %>%
filter(is.na(iso_a3) == FALSE) %>%
select(2020, iso_a3, geometry) %>%
left_join(covid %>%
select(iso_a3 , total) , by = 'iso_a3')
left_join(pop_2020, iso_un , by = c('country_code' = 'iso_n3')) %>%
filter(is.na(iso_a3) == FALSE) %>%
select(`2020`, iso_a3, geometry) %>%
left_join(covid %>%
select(iso_a3 , total) , by = 'iso_a3')
map_100k <- left_join(pop_2020, iso_un , by = c('country_code' = 'iso_n3')) %>%
filter(is.na(iso_a3) == FALSE) %>%
select(`2020`, iso_a3, geometry) %>%
left_join(covid %>%
select(iso_a3 , total) , by = 'iso_a3')
map_100k
map_100k <- map_100k %>%
mutate(cases_per100 = (total/`2020`)*1e5)
map_100k  %>%
ggplot() +
geom_sf(aes(fill = cases_per100), size = 0.1, color = "white") +
coord_sf(crs = "+proj=longlat") +
scale_fill_distiller( palette = "Blues",
direction = -1,
guide = guide_colorbar(
title = "Number of cases[log]",
title.hjust = 0.5,
direction = "horizontal",
nrow = 1,
keyheight = unit(3, units = "mm"),
keywidth = unit(3, units = "mm"),
title.position = "top"  ,
barheight =  1.25 , barwidth = 15)) +
theme_minimal() +
theme(legend.direction = "horizontal",
legend.position = "bottom" ,
panel.grid.major.y = element_blank() , panel.grid.minor.y = element_blank()) +
labs(title = "",
subtitle = "Covid Cases Worldwide ")
map_100k
map_100k <- left_join(pop_2020, iso_un , by = c('country_code' = 'iso_n3')) %>%
filter(is.na(iso_a3) == FALSE) %>%
select(`2020`, iso_a3, geometry) %>%
left_join(covid %>%
select(iso_a3 , total) , by = 'iso_a3')
map_100k <- map_100k %>%
mutate(cases_per100 = (total/`2020`)*1e5)  %>%
sf::st_as_sf()
map_100k  %>%
ggplot() +
geom_sf(aes(fill = cases_per100), size = 0.1, color = "white") +
coord_sf(crs = "+proj=longlat") +
scale_fill_distiller( palette = "Blues",
direction = -1,
guide = guide_colorbar(
title = "Number of cases[log]",
title.hjust = 0.5,
direction = "horizontal",
nrow = 1,
keyheight = unit(3, units = "mm"),
keywidth = unit(3, units = "mm"),
title.position = "top"  ,
barheight =  1.25 , barwidth = 15)) +
theme_minimal() +
theme(legend.direction = "horizontal",
legend.position = "bottom" ,
panel.grid.major.y = element_blank() , panel.grid.minor.y = element_blank()) +
labs(title = "",
subtitle = "Covid Cases Worldwide ")
map_100k  %>%
ggplot() +
geom_sf(aes(fill = cases_per100), size = 0.1, color = "white") +
coord_sf(crs = "+proj=longlat") +
scale_fill_distiller( palette = "Blues",
direction = 1 ,
guide = guide_colorbar(
title = "Number of cases per 100k",
title.hjust = 0.5,
direction = "horizontal",
nrow = 1,
keyheight = unit(3, units = "mm"),
keywidth = unit(3, units = "mm"),
title.position = "top"  ,
barheight =  1.25 , barwidth = 15)) +
theme_minimal() +
theme(legend.direction = "horizontal",
legend.position = "bottom" ,
panel.grid.major.y = element_blank() , panel.grid.minor.y = element_blank()) +
labs(title = "",
subtitle = "Covid Cases Worldwide ")
map_100k  %>%
ggplot() +
geom_sf(aes(fill = cases_per100), size = 0.1, color = "white") +
coord_sf(crs = "+proj=longlat") +
scale_fill_distiller( palette = "Blues",
direction = 1 ,
guide = guide_colorbar(
title = "Number of cases per 100k",
title.hjust = 0.5,
labels = unit_format(unit = "M", scale = 1e-6) ,
direction = "horizontal",
nrow = 1,
keyheight = unit(3, units = "mm"),
keywidth = unit(3, units = "mm"),
title.position = "top"  ,
barheight =  1.25 , barwidth = 15)) +
theme_minimal() +
theme(legend.direction = "horizontal",
legend.position = "bottom" ,
panel.grid.major.y = element_blank() , panel.grid.minor.y = element_blank()) +
labs(title = "",
subtitle = "Covid Cases Worldwide ")
options(scipen = 999)
map_100k  %>%
ggplot() +
geom_sf(aes(fill = cases_per100), size = 0.1, color = "white") +
coord_sf(crs = "+proj=longlat") +
scale_fill_distiller( palette = "Blues",
direction = 1 ,
guide = guide_colorbar(
title = "Number of cases per 100k",
title.hjust = 0.5,
labels = unit_format(unit = "M", scale = 1e-6) ,
direction = "horizontal",
nrow = 1,
keyheight = unit(3, units = "mm"),
keywidth = unit(3, units = "mm"),
title.position = "top"  ,
barheight =  1.25 , barwidth = 15)) +
theme_minimal() +
theme(legend.direction = "horizontal",
legend.position = "bottom" ,
panel.grid.major.y = element_blank() , panel.grid.minor.y = element_blank()) +
labs(title = "",
subtitle = "Covid Cases Worldwide ")
map_100k  %>%
ggplot() +
geom_sf(aes(fill = cases_per100), size = 0.1, color = "white") +
coord_sf(crs = "+proj=longlat") +
scale_fill_distiller( palette = "Blues",
direction = 1 ,
guide = guide_colorbar(
title = "Number of cases per 100k",
title.hjust = 0.5,
labels = unit_format(unit = "M", scale = 1e-6) ,
direction = "horizontal",
nrow = 1,
keyheight = unit(3, units = "mm"),
keywidth = unit(3, units = "mm"),
title.position = "top"  ,
barheight =  1.25 , barwidth = 15)) +
theme_minimal() +
theme(legend.direction = "horizontal",
legend.position = "bottom" ,
panel.grid.major.y = element_blank() , panel.grid.minor.y = element_blank()) +
labs(title = "",
subtitle = "Covid Cases Worldwide ")
#S&P throughout the years
originalData_process
plot_raw <- ggplot(originalData_process, aes(y = s_p500, x = dates)) +
geom_line()
plot_raw
covid_1 <- read_csv('data/covid_jh.csv')
covid_1 <- read_csv('data/covid_jh.csv')
covid_1<- clean_names(covid_1)
covid_1<- clean_names(covid_1)
covid <- covid_1[-1 ,c(318:319)] %>%
rename('iso_a3' = 'iso_3166_1_alpha_3_codes') %>%
group_by(iso_a3) %>%
summarise(total = sum(x11_30_20))
covid_1
covid <- covid_1[-1 ,c(319:320)] %>%
rename('iso_a3' = 'iso_3166_1_alpha_3_codes') %>%
group_by(iso_a3) %>%
summarise(total = sum(x11_30_20))
covid_1 <- read_csv('data/covid_jh.csv')
covid_1 <- read_csv('data/covid_jh.csv')
covid_1<- clean_names(covid_1)
View(covid_1)
covid_1[-1 ,c(319:320)]
covid <- covid_1[-1 ,c(319:320)] %>%
rename('iso_a3' = 'iso_3166_1_alpha_3_codes') %>%
group_by(iso_a3) %>%
summarise(total = sum(x12_1_20))
#extracting only the iso_a3 and total
map_covid <- covid %>%
select(iso_a3 , total)
#getting geometrty and isocodes
earth <- ne_countries(scale = 50, returnclass = "sf") %>%
select(admin, geometry, iso_a3)
map_covid <- left_join(map_covid , earth , by = 'iso_a3')
map_covid <- map_covid %>%
select(admin, total, geometry) %>%
sf::st_as_sf()
options(scipen = 999)
map_covid  %>%
ggplot() +
geom_sf(aes(fill = total), size = 0.1, color = "white") +
coord_sf(crs = "+proj=longlat") +
scale_fill_distiller( palette = "Spectral",
direction = -1,
labels = unit_format(unit = "M", scale = 1e-6),
guide = guide_colorbar(
title = "Number of cases",
title.hjust = 0.5,
direction = "horizontal",
nrow = 1,
keyheight = unit(3, units = "mm"),
keywidth = unit(3, units = "mm"),
title.position = "top"  ,
barheight =  1.25 , barwidth = 15)) +
theme_minimal() +
theme(legend.direction = "horizontal",
legend.position = "bottom" ,
panel.grid.major.y = element_blank() , panel.grid.minor.y = element_blank()) +
labs(title = "",
subtitle = "Covid Cases Worldwide ")
map_100k  %>%
ggplot() +
geom_sf(aes(fill = cases_per100), size = 0.1, color = "white") +
coord_sf(crs = "+proj=longlat") +
scale_fill_distiller( palette = "Blues",
direction = 1 ,
guide = guide_colorbar(
title = "Number of cases per 100k",
title.hjust = 0.5,
labels = unit_format(unit = "M", scale = 1e-6) ,
direction = "horizontal",
nrow = 1,
keyheight = unit(3, units = "mm"),
keywidth = unit(3, units = "mm"),
title.position = "top"  ,
barheight =  1.25 , barwidth = 15)) +
theme_minimal() +
theme(legend.direction = "horizontal",
legend.position = "bottom" ,
panel.grid.major.y = element_blank() , panel.grid.minor.y = element_blank()) +
labs(title = "",
subtitle = "Covid Cases Worldwide ")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(cluster)
library(Hmisc)
library(factoextra)
library(purrr)
library(gridExtra)
library(data.table)
library(reshape2)
library(recommenderlab)
library(ggplot2)
library(Hmisc)
library(dplyr)
library(readxl)
library(janitor)
library(skimr)
readxl::read_xls('Data/Company_Data.xls')
