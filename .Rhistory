labs(x = '' , y = ' '  ) +
guides(fill =  guide_colourbar(title = 'Correlation' , barheight = 15 , barwidth = 1))+
theme_ipsum() +
theme(panel.grid.minor = element_blank() , panel.grid.major = element_blank())
cols_1 = character()
cols_2 = character()
corr_list = double()
i = 1
for (col1 in colnames(ccf_df)){
j = 1
for (col2 in colnames(ccf_df)){
ccf_values = ccf(ccf_df[rowSums(is.na(ccf_df[, i]))  == 0,i] , ccf_df[rowSums(is.na(ccf_df[, j]))  == 0,j])
values = ccf_values[0][[1]][[1]]
cols_1[[length(cols_1) + 1]] = col1
cols_2[[length(cols_2) + 1]] = col2
corr_list[[length(corr_list) + 1]] = values
j = j+1
}
i = i +1
}
data.frame(cbind(cols_1 ,cols_2 , corr_list))%>%
ggplot() +
geom_tile(aes(x  = cols_1 , y = cols_2 , fill = as.double(corr_list))) +
scale_fill_distiller(palette = "Blues" ,
direction = 1) +
labs(x = '' , y = ' '  ) +
guides(fill =  guide_colourbar(title = 'Correlation' , barheight = 15 , barwidth = 1))+
theme_ipsum() +
theme(panel.grid.minor = element_blank() , panel.grid.major = element_blank()) +
theme( axis.line = element_line(), panel.grid.major = element_blank() , panel.grid.minor= element_blank(),
plot.title = element_text(size = 15, face= "bold"), plot.subtitle = element_text(size = 12) ,
) +
labs(title = "Correlation",
subtitle = "subtitle ")
data.frame(cbind(cols_1 ,cols_2 , corr_list))%>%
ggplot() +
geom_tile(aes(x  = cols_1 , y = cols_2 , fill = as.double(corr_list))) +
scale_fill_distiller(palette = "Blues" ,
direction = 1) +
labs(x = '' , y = ' '  ) +
guides(fill =  guide_colourbar(title = 'Correlation' , barheight = 15 , barwidth = 1))+
theme_ipsum() +
theme(panel.grid.minor = element_blank() , panel.grid.major = element_blank()) +
theme( axis.line = element_line(), panel.grid.major = element_blank() , panel.grid.minor= element_blank(),
plot.title = element_text(size = 15, face= "bold"), plot.subtitle = element_text(size = 12) ,
) +
labs(title = "Correlation",
subtitle = "Cross Correlaion for the various indcies in 2020 ")
data.frame(cbind(cols_1 ,cols_2 , corr_list))%>%
ggplot() +
geom_tile(aes(x  = cols_1 , y = cols_2 , fill = as.double(corr_list))) +
scale_fill_distiller(palette = "Blues" ,
direction = 1) +
labs(x = '' , y = ' '  ) +
guides(fill =  guide_colourbar(title = 'Correlation' , barheight = 15 , barwidth = 1))+
theme_ipsum() +
theme(panel.grid.minor = element_blank() , panel.grid.major = element_blank()) +
theme( axis.line = element_line(), panel.grid.major = element_blank() , panel.grid.minor= element_blank(),
plot.title = element_text(size = 15, face= "bold"), plot.subtitle = element_text(size = 12) ,
) +
labs(
subtitle = "Cross Correlaion for the various indcies in 2020 ")
plot_4 <-data.frame(cbind(cols_1 ,cols_2 , corr_list))%>%
ggplot() +
geom_tile(aes(x  = cols_1 , y = cols_2 , fill = as.double(corr_list))) +
scale_fill_distiller(palette = "Blues" ,
direction = 1) +
labs(x = '' , y = ' '  ) +
guides(fill =  guide_colourbar(title = 'Correlation' , barheight = 15 , barwidth = 1))+
theme_ipsum() +
theme(panel.grid.minor = element_blank() , panel.grid.major = element_blank()) +
theme( axis.line = element_line(), panel.grid.major = element_blank() , panel.grid.minor= element_blank(),
plot.title = element_text(size = 15, face= "bold"), plot.subtitle = element_text(size = 12) ,
) +
labs(
subtitle = "Cross Correlaion for the various indcies in 2020 ")
plot_4
plot_4 <-data.frame(cbind(cols_1 ,cols_2 , corr_list))%>%
ggplot() +
geom_tile(aes(x  = cols_1 , y = cols_2 , fill = as.double(corr_list))) +
scale_fill_distiller(palette = "Blues" ,
direction = 1) +
labs(x = '' , y = ' '  ) +
guides(fill =  guide_colourbar(title = 'Correlation' , barheight = 15 , barwidth = 1))+
theme_ipsum() +
theme(panel.grid.minor = element_blank() , panel.grid.major = element_blank()) +
theme( axis.line = element_line(), panel.grid.major = element_blank() , panel.grid.minor= element_blank(),
plot.title = element_text(size = 15, face= "bold"), plot.subtitle = element_text(size = 12) ,
) +
labs(
subtitle = "Cross Correlation for the various indices in 2020 ")
plot_4
#chekcing for total number rows wiht na values
originalData_process[rowSums(is.na(originalData_process[, -1])) > 0,]
#total of 11114 rows which is ~20% so could use the prevous datts
originalData_process[rowSums(is.na(originalData_process[, -1])) > 0 ,] %>%
filter(year(dates) == 2020)
#for 2020 reduced to 50 which is 50/240
full_year_2020 <- originalData_process[!rowSums(is.na(originalData_process[, -1])) > 0 ,] %>%
filter(year(dates) == 2020)
#transforming each column to a percentage change from initial value
for (i in c(2:9)){
inital_val <- unlist(full_year_2020[1,i[[1]]])
full_year_2020[,i] <- (full_year_2020[ ,i]/inital_val)- 1
}
full_year_2020$avg_change <- rowSums(full_year_2020[, -1])/8
#plotting the graph
full_year_2020 %>%
select(dates, s_p500 , avg_change) %>%
pivot_longer(cols = 2:3 , names_to ='market' , values_to = 'pct_change' ) %>%
ggplot() +
geom_line(aes(x = dates, y=pct_change, color = market) , size = 1.5 , alpha = 0.5) +
geom_hline(yintercept = 0 , size = 2 ) +
scale_y_continuous(labels =  scales::percent) +
theme_minimal() +
theme(panel.grid.major.x =  element_blank() ,
panel.grid.minor =  element_blank() ,
panel.grid.major.y = element_line(size = 1),
legend.position = 'bottom') +
labs (title = "Financial markets worldwide in 2020 compared to the S&P500 performance",
subtitle = "xxxxx0",
x = "time",
y = "indeces",
caption = "tbccccc") +
theme(panel.background =element_blank(),
panel.grid.major  = element_blank() ,
panel.grid.minor = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
plot.title = element_text(size = 15, face= "bold"), plot.subtitle = element_text(size = 13))
#plotting the graph
full_year_2020 %>%
select(dates, s_p500 , avg_change) %>%
pivot_longer(cols = 2:3 , names_to ='market' , values_to = 'pct_change' ) %>%
ggplot() +
geom_line(aes(x = dates, y=pct_change, color = market) , size = 1.5 , alpha = 0.5) +
geom_hline(yintercept = 0 , size = 2 ) +
scale_y_continuous(labels =  scales::percent) +
theme_minimal() +
theme(panel.grid.major.x =  element_blank() ,
panel.grid.minor =  element_blank() ,
panel.grid.major.y = element_line(size = 1),
legend.position = 'bottom') +
labs (title = "Financial markets worldwide in 2020 compared to the S&P500 performance",
subtitle = "xxxxx0",
x = "time",
y = "indeces",
caption = "tbccccc") +
theme(panel.background =element_blank(),
panel.grid.major  = element_blank() ,
panel.grid.minor = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
plot.title = element_text(size = 15, face= "bold"), plot.subtitle = element_text(size = 13))
#plotting the graph
full_year_2020 %>%
select(dates, s_p500 , avg_change) %>%
pivot_longer(cols = 2:3 , names_to ='market' , values_to = 'pct_change' ) %>%
ggplot() +
geom_line(aes(x = dates, y=pct_change, color = market) , size = 1.5 , alpha = 0.5) +
geom_hline(yintercept = 0 , size = 2 ) +
scale_y_continuous(labels =  scales::percent) +
theme_minimal() +
theme(panel.grid.major.x =  element_blank() ,
panel.grid.minor =  element_blank() ,
panel.grid.major.y = element_line(size = 1),
legend.position = 'bottom') +
labs (subtitle = "Financial markets worldwide in 2020 compared to the S&P500 performance",
title = "xxxxx0",
x = "time",
y = "indeces") +
theme(panel.background =element_blank(),
panel.grid.major  = element_blank() ,
panel.grid.minor = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
plot.title = element_text(size = 13, face= "bold"), plot.subtitle = element_text(size = 13))
#plotting the graph
full_year_2020 %>%
select(dates, s_p500 , avg_change) %>%
pivot_longer(cols = 2:3 , names_to ='market' , values_to = 'pct_change' ) %>%
ggplot() +
geom_line(aes(x = dates, y=pct_change, color = market) , size = 1, alpha = 0.5) +
geom_hline(yintercept = 0 , size = 2 ) +
scale_y_continuous(labels =  scales::percent) +
theme_minimal() +
theme(panel.grid.major.x =  element_blank() ,
panel.grid.minor =  element_blank() ,
panel.grid.major.y = element_line(size = 1),
legend.position = 'bottom') +
labs (subtitle = "Financial markets worldwide in 2020 compared to the S&P500 performance",
title = "xxxxx0",
x = "time",
y = "indeces") +
theme(panel.background =element_blank(),
panel.grid.major  = element_blank() ,
panel.grid.minor = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
plot.title = element_text(size = 13, face= "bold"), plot.subtitle = element_text(size = 13))
#plotting the graph
full_year_2020 %>%
select(dates, s_p500 , avg_change) %>%
pivot_longer(cols = 2:3 , names_to ='market' , values_to = 'pct_change' ) %>%
ggplot() +
geom_line(aes(x = dates, y=pct_change, color = market) , size = 1.5 , alpha = 0.5) +
geom_hline(yintercept = 0 , size = 1.5 ) +
scale_y_continuous(labels =  scales::percent) +
theme_minimal() +
theme(panel.grid.major.x =  element_blank() ,
panel.grid.minor =  element_blank() ,
panel.grid.major.y = element_line(size = 1),
legend.position = 'bottom') +
labs (subtitle = "Financial markets worldwide in 2020 compared to the S&P500 performance",
title = "xxxxx0",
x = "time",
y = "indeces") +
theme(panel.background =element_blank(),
panel.grid.major  = element_blank() ,
panel.grid.minor = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
plot.title = element_text(size = 13, face= "bold"), plot.subtitle = element_text(size = 13))
#plotting the graph
full_year_2020 %>%
select(dates, s_p500 , avg_change) %>%
pivot_longer(cols = 2:3 , names_to ='market' , values_to = 'pct_change' ) %>%
ggplot() +
geom_line(aes(x = dates, y=pct_change, color = market) , size = 1.5 , alpha = 0.5) +
geom_hline(yintercept = 0 , size = 1 ) +
scale_y_continuous(labels =  scales::percent) +
theme_minimal() +
theme(panel.grid.major.x =  element_blank() ,
panel.grid.minor =  element_blank() ,
panel.grid.major.y = element_line(size = 1),
legend.position = 'bottom') +
labs (subtitle = "Financial markets worldwide in 2020 compared to the S&P500 performance",
title = "xxxxx0",
x = "time",
y = "indeces") +
theme(panel.background =element_blank(),
panel.grid.major  = element_blank() ,
panel.grid.minor = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
plot.title = element_text(size = 13, face= "bold"), plot.subtitle = element_text(size = 13))
#plotting the graph
full_year_2020 %>%
select(dates, s_p500 , avg_change) %>%
pivot_longer(cols = 2:3 , names_to ='market' , values_to = 'pct_change' ) %>%
ggplot() +
geom_line(aes(x = dates, y=pct_change, color = market) , size = 1.5 , alpha = 0.5) +
geom_hline(yintercept = 0 , size = 1 ) +
scale_y_continuous(labels =  scales::percent) +
scale_color_manual(values = c('grey' , 'blue'))+
theme_minimal() +
theme(panel.grid.major.x =  element_blank() ,
panel.grid.minor =  element_blank() ,
panel.grid.major.y = element_line(size = 1),
legend.position = 'bottom') +
labs (subtitle = "Financial markets worldwide in 2020 compared to the S&P500 performance",
title = "xxxxx0",
x = "time",
y = "indeces") +
theme(panel.background =element_blank(),
panel.grid.major  = element_blank() ,
panel.grid.minor = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
plot.title = element_text(size = 13, face= "bold"), plot.subtitle = element_text(size = 13))
#plotting the graph
full_year_2020 %>%
select(dates, s_p500 , avg_change) %>%
pivot_longer(cols = 2:3 , names_to ='market' , values_to = 'pct_change' ) %>%
ggplot() +
geom_line(aes(x = dates, y=pct_change, color = market) , size = 1.5 , alpha = 0.5) +
geom_hline(yintercept = 0 , size = 1 ) +
scale_y_continuous(labels =  scales::percent) +
scale_color_manual(values = c('grey' , '#04449c'))+
theme_minimal() +
theme(panel.grid.major.x =  element_blank() ,
panel.grid.minor =  element_blank() ,
panel.grid.major.y = element_line(size = 1),
legend.position = 'bottom') +
labs (subtitle = "Financial markets worldwide in 2020 compared to the S&P500 performance",
title = "xxxxx0",
x = "time",
y = "indeces") +
theme(panel.background =element_blank(),
panel.grid.major  = element_blank() ,
panel.grid.minor = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
plot.title = element_text(size = 13, face= "bold"), plot.subtitle = element_text(size = 13))
#plotting the graph
full_year_2020 %>%
select(dates, s_p500 , avg_change) %>%
pivot_longer(cols = 2:3 , names_to ='market' , values_to = 'pct_change' ) %>%
ggplot() +
geom_line(aes(x = dates, y=pct_change, color = market) , size = 1.5 , alpha = 0.5) +
geom_hline(yintercept = 0 , size = 1 ) +
scale_y_continuous(labels =  scales::percent) +
scale_color_manual(values = c('grey' , '#04449c'))+
theme_minimal() +
theme(panel.grid.major.x =  element_blank() ,
panel.grid.minor =  element_blank() ,
panel.grid.major.y = element_line(size = 1),
legend.position = 'bottom') +
labs (subtitle = "Financial markets worldwide in 2020 compared to the S&P500 performance",
title = "xxxxx0",
x = "time",
y = "indeces" ,
color = 'Index') +
theme(panel.background =element_blank(),
panel.grid.major  = element_blank() ,
panel.grid.minor = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
plot.title = element_text(size = 13, face= "bold"), plot.subtitle = element_text(size = 13))
#plotting the graph
full_year_2020 %>%
select(dates, s_p500 , avg_change) %>%
pivot_longer(cols = 2:3 , names_to ='market' , values_to = 'pct_change' ) %>%
ggplot() +
geom_line(aes(x = dates, y=pct_change, color = market) , size = 1.5 , alpha = 0.5) +
geom_hline(yintercept = 0 , size = 1 ) +
scale_y_continuous(labels =  scales::percent) +
scale_color_manual(values = c('grey' , '#04449c'))+
theme_minimal() +
theme(panel.grid.major.x =  element_blank() ,
panel.grid.minor =  element_blank() ,
panel.grid.major.y = element_line(size = 1),
legend.position = 'bottom') +
labs (subtitle = "Financial markets worldwide in 2020 compared to the S&P500 performance",
title = "Financial Markets are on average aligned to the S&P",
x = "time",
y = "indeces" ,
color = 'Index') +
theme(panel.background =element_blank(),
panel.grid.major  = element_blank() ,
panel.grid.minor = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
plot.title = element_text(size = 13, face= "bold"), plot.subtitle = element_text(size = 13))
#chekcing for total number rows wiht na values
originalData_process[rowSums(is.na(originalData_process[, -1])) > 0,]
#total of 11114 rows which is ~20% so could use the prevous datts
originalData_process[rowSums(is.na(originalData_process[, -1])) > 0 ,] %>%
filter(year(dates) == 2020)
#for 2020 reduced to 50 which is 50/240
full_year_2020 <- originalData_process[!rowSums(is.na(originalData_process[, -1])) > 0 ,] %>%
filter(year(dates) == 2020)
#transforming each column to a percentage change from initial value
for (i in c(2:9)){
inital_val <- unlist(full_year_2020[1,i[[1]]])
full_year_2020[,i] <- (full_year_2020[ ,i]/inital_val)- 1
}
full_year_2020$world <- rowSums(full_year_2020[, -1])/8
#plotting the graph
full_year_2020 %>%
select(dates, s_p500 , avg_change) %>%
pivot_longer(cols = 2:3 , names_to ='market' , values_to = 'pct_change' ) %>%
ggplot() +
geom_line(aes(x = dates, y=pct_change, color = market) , size = 1.5 , alpha = 0.5) +
geom_hline(yintercept = 0 , size = 1 ) +
scale_y_continuous(labels =  scales::percent) +
scale_color_manual(values = c('grey' , '#04449c'))+
theme_minimal() +
theme(panel.grid.major.x =  element_blank() ,
panel.grid.minor =  element_blank() ,
panel.grid.major.y = element_line(size = 1),
legend.position = 'bottom') +
labs (subtitle = "Financial markets worldwide in 2020 compared to the S&P500 performance",
title = "Financial Markets are on average aligned to the S&P",
x = "time",
y = "indeces" ,
color = 'Index') +
theme(panel.background =element_blank(),
panel.grid.major  = element_blank() ,
panel.grid.minor = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
plot.title = element_text(size = 13, face= "bold"), plot.subtitle = element_text(size = 13))
#plotting the graph
full_year_2020 %>%
select(dates, s_p500 , world) %>%
pivot_longer(cols = 2:3 , names_to ='market' , values_to = 'pct_change' ) %>%
ggplot() +
geom_line(aes(x = dates, y=pct_change, color = market) , size = 1.5 , alpha = 0.5) +
geom_hline(yintercept = 0 , size = 1 ) +
scale_y_continuous(labels =  scales::percent) +
scale_color_manual(values = c('grey' , '#04449c'))+
theme_minimal() +
theme(panel.grid.major.x =  element_blank() ,
panel.grid.minor =  element_blank() ,
panel.grid.major.y = element_line(size = 1),
legend.position = 'bottom') +
labs (subtitle = "Financial markets worldwide in 2020 compared to the S&P500 performance",
title = "Financial Markets are on average aligned to the S&P",
x = "time",
y = "indeces" ,
color = 'Index') +
theme(panel.background =element_blank(),
panel.grid.major  = element_blank() ,
panel.grid.minor = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
plot.title = element_text(size = 13, face= "bold"), plot.subtitle = element_text(size = 13))
#chekcing for total number rows wiht na values
originalData_process[rowSums(is.na(originalData_process[, -1])) > 0,]
#total of 11114 rows which is ~20% so could use the prevous datts
originalData_process[rowSums(is.na(originalData_process[, -1])) > 0 ,] %>%
filter(year(dates) == 2020)
#for 2020 reduced to 50 which is 50/240
full_year_2020 <- originalData_process[!rowSums(is.na(originalData_process[, -1])) > 0 ,] %>%
filter(year(dates) == 2020)
#transforming each column to a percentage change from initial value
for (i in c(2:9)){
inital_val <- unlist(full_year_2020[1,i[[1]]])
full_year_2020[,i] <- (full_year_2020[ ,i]/inital_val)- 1
}
full_year_2020$world_aggregate <- rowSums(full_year_2020[, -1])/8
#plotting the graph
full_year_2020 %>%
select(dates, s_p500 , world_aggregate) %>%
pivot_longer(cols = 2:3 , names_to ='market' , values_to = 'pct_change' ) %>%
ggplot() +
geom_line(aes(x = dates, y=pct_change, color = market) , size = 1.5 , alpha = 0.5) +
geom_hline(yintercept = 0 , size = 1 ) +
scale_y_continuous(labels =  scales::percent) +
scale_color_manual(values = c('grey' , '#04449c'))+
theme_minimal() +
theme(panel.grid.major.x =  element_blank() ,
panel.grid.minor =  element_blank() ,
panel.grid.major.y = element_line(size = 1),
legend.position = 'bottom') +
labs (subtitle = "Financial markets worldwide in 2020 compared to the S&P500 performance",
title = "Financial Markets are on average aligned to the S&P",
x = "time",
y = "indeces" ,
color = 'Index') +
theme(panel.background =element_blank(),
panel.grid.major  = element_blank() ,
panel.grid.minor = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
plot.title = element_text(size = 13, face= "bold"), plot.subtitle = element_text(size = 13))
#chekcing for total number rows wiht na values
originalData_process[rowSums(is.na(originalData_process[, -1])) > 0,]
#total of 11114 rows which is ~20% so could use the prevous datts
originalData_process[rowSums(is.na(originalData_process[, -1])) > 0 ,] %>%
filter(year(dates) == 2020)
#for 2020 reduced to 50 which is 50/240
full_year_2020 <- originalData_process[!rowSums(is.na(originalData_process[, -1])) > 0 ,] %>%
filter(year(dates) == 2020)
#transforming each column to a percentage change from initial value
for (i in c(2:9)){
inital_val <- unlist(full_year_2020[1,i[[1]]])
full_year_2020[,i] <- (full_year_2020[ ,i]/inital_val)- 1
}
full_year_2020$world_aggregate <- rowSums(full_year_2020[, -1])/8
#plotting the graph
full_year_2020 %>%
select(dates, s_p500 , world_aggregate) %>%
pivot_longer(cols = 2:3 , names_to ='market' , values_to = 'pct_change' ) %>%
ggplot() +
geom_line(aes(x = dates, y=pct_change, color = market) , size = 1.5 , alpha = 0.5) +
geom_hline(yintercept = 0 , size = 1 ) +
scale_y_continuous(labels =  scales::percent) +
scale_color_manual(values = c('grey' , '#04449c'))+
theme_minimal() +
theme(panel.grid.major.x =  element_blank() ,
panel.grid.minor =  element_blank() ,
panel.grid.major.y = element_line(size = 1),
legend.position = 'bottom') +
labs (subtitle = "Indices worldwide in 2020 compared to the S&P500 performance",
title = "Financial Markets are on average aligned to the S&P500",
x = "time",
y = "indeces" ,
color = 'Index') +
theme(panel.background =element_blank(),
panel.grid.major  = element_blank() ,
panel.grid.minor = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
plot.title = element_text(size = 13, face= "bold"), plot.subtitle = element_text(size = 13))
#plotting the graph
plot_5 <- full_year_2020 %>%
select(dates, s_p500 , world_aggregate) %>%
pivot_longer(cols = 2:3 , names_to ='market' , values_to = 'pct_change' ) %>%
ggplot() +
geom_line(aes(x = dates, y=pct_change, color = market) , size = 1.5 , alpha = 0.5) +
geom_hline(yintercept = 0 , size = 1 ) +
scale_y_continuous(labels =  scales::percent) +
scale_color_manual(values = c('grey' , '#04449c'))+
theme_minimal() +
theme(panel.grid.major.x =  element_blank() ,
panel.grid.minor =  element_blank() ,
panel.grid.major.y = element_line(size = 1),
legend.position = 'bottom') +
labs (subtitle = "Indices worldwide in 2020 compared to the S&P500 performance",
title = "Financial Markets are on average aligned to the S&P500",
x = "time",
y = "indeces" ,
color = 'Index') +
theme(panel.background =element_blank(),
panel.grid.major  = element_blank() ,
panel.grid.minor = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
plot.title = element_text(size = 13, face= "bold"), plot.subtitle = element_text(size = 13))
plot_5
